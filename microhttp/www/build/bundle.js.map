{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@sveltejs/svelte-virtual-list/VirtualList.svelte","../../node_modules/namey-mcnameface/namey-mcnameface.js","../../src/data.js","../../src/ListItem.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\timport { onMount, tick } from 'svelte';\n\n\t// props\n\texport let items;\n\texport let height = '100%';\n\texport let itemHeight = undefined;\n\n\tlet foo;\n\n\t// read-only, but visible to consumers via bind:start\n\texport let start = 0;\n\texport let end = 0;\n\n\t// local state\n\tlet height_map = [];\n\tlet rows;\n\tlet viewport;\n\tlet contents;\n\tlet viewport_height = 0;\n\tlet visible;\n\tlet mounted;\n\n\tlet top = 0;\n\tlet bottom = 0;\n\tlet average_height;\n\n\t$: visible = items.slice(start, end).map((data, i) => {\n\t\treturn { index: i + start, data };\n\t});\n\n\t// whenever `items` changes, invalidate the current heightmap\n\t$: if (mounted) refresh(items, viewport_height, itemHeight);\n\n\tasync function refresh(items, viewport_height, itemHeight) {\n\t\tconst { scrollTop } = viewport;\n\n\t\tawait tick(); // wait until the DOM is up to date\n\n\t\tlet content_height = top - scrollTop;\n\t\tlet i = start;\n\n\t\twhile (content_height < viewport_height && i < items.length) {\n\t\t\tlet row = rows[i - start];\n\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\n\t\t\tconst row_height = height_map[i] = itemHeight || row.offsetHeight;\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = (top + content_height) / end;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = items.length;\n\n\t}\n\n\tasync function handle_scroll() {\n\t\tconst { scrollTop } = viewport;\n\n\t\tconst old_start = start;\n\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = itemHeight || rows[v].offsetHeight;\n\t\t}\n\n\t\tlet i = 0;\n\t\tlet y = 0;\n\n\t\twhile (i < items.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\tif (y + row_height > scrollTop) {\n\t\t\t\tstart = i;\n\t\t\t\ttop = y;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\twhile (i < items.length) {\n\t\t\ty += height_map[i] || average_height;\n\t\t\ti += 1;\n\n\t\t\tif (y > scrollTop + viewport_height) break;\n\t\t}\n\n\t\tend = i;\n\n\t\tconst remaining = items.length - end;\n\t\taverage_height = y / end;\n\n\t\twhile (i < items.length) height_map[i++] = average_height;\n\t\tbottom = remaining * average_height;\n\n\t\t// prevent jumping if we scrolled up into unknown territory\n\t\tif (start < old_start) {\n\t\t\tawait tick();\n\n\t\t\tlet expected_height = 0;\n\t\t\tlet actual_height = 0;\n\n\t\t\tfor (let i = start; i < old_start; i +=1) {\n\t\t\t\tif (rows[i - start]) {\n\t\t\t\t\texpected_height += height_map[i];\n\t\t\t\t\tactual_height += itemHeight || rows[i - start].offsetHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst d = actual_height - expected_height;\n\t\t\tviewport.scrollTo(0, scrollTop + d);\n\t\t}\n\n\t\t// TODO if we overestimated the space these\n\t\t// rows would occupy we may need to add some\n\t\t// more. maybe we can just call handle_scroll again?\n\t}\n\n\t// trigger initial refresh\n\tonMount(() => {\n\t\trows = contents.getElementsByTagName('svelte-virtual-list-row');\n\t\tmounted = true;\n\t});\n</script>\n\n<style>\n\tsvelte-virtual-list-viewport {\n\t\tposition: relative;\n\t\toverflow-y: auto;\n\t\t-webkit-overflow-scrolling:touch;\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-contents, svelte-virtual-list-row {\n\t\tdisplay: block;\n\t}\n\n\tsvelte-virtual-list-row {\n\t\toverflow: hidden;\n\t}\n</style>\n\n<svelte-virtual-list-viewport\n\tbind:this={viewport}\n\tbind:offsetHeight={viewport_height}\n\ton:scroll={handle_scroll}\n\tstyle=\"height: {height};\"\n>\n\t<svelte-virtual-list-contents\n\t\tbind:this={contents}\n\t\tstyle=\"padding-top: {top}px; padding-bottom: {bottom}px;\"\n\t>\n\t\t{#each visible as row (row.index)}\n\t\t\t<svelte-virtual-list-row>\n\t\t\t\t<slot item={row.data}>Missing template</slot>\n\t\t\t</svelte-virtual-list-row>\n\t\t{/each}\n\t</svelte-virtual-list-contents>\n</svelte-virtual-list-viewport>\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.nameyMcNameface = factory());\n}(this, function () { 'use strict';\n\n\tvar animals = [\n\t  \"aardvark\",\n\t  \"aardwolf\",\n\t  \"albatross\",\n\t  \"alligator\",\n\t  \"alpaca\",\n\t  \"amphibian\",\n\t  \"anaconda\",\n\t  \"angelfish\",\n\t  \"anglerfish\",\n\t  \"ant\",\n\t  \"anteater\",\n\t  \"antelope\",\n\t  \"antlion\",\n\t  \"ape\",\n\t  \"aphid\",\n\t  \"armadillo\",\n\t  \"asp\",\n\t  \"baboon\",\n\t  \"badger\",\n\t  \"bandicoot\",\n\t  \"barnacle\",\n\t  \"barracuda\",\n\t  \"basilisk\",\n\t  \"bass\",\n\t  \"bat\",\n\t  \"bear\",\n\t  \"beaver\",\n\t  \"bedbug\",\n\t  \"bee\",\n\t  \"beetle\",\n\t  \"bird\",\n\t  \"bison\",\n\t  \"blackbird\",\n\t  \"boa\",\n\t  \"boar\",\n\t  \"bobcat\",\n\t  \"bobolink\",\n\t  \"bonobo\",\n\t  \"booby\",\n\t  \"bovid\",\n\t  \"bug\",\n\t  \"butterfly\",\n\t  \"buzzard\",\n\t  \"camel\",\n\t  \"canid\",\n\t  \"capybara\",\n\t  \"cardinal\",\n\t  \"caribou\",\n\t  \"carp\",\n\t  \"cat\",\n\t  \"catshark\",\n\t  \"caterpillar\",\n\t  \"catfish\",\n\t  \"cattle\",\n\t  \"centipede\",\n\t  \"cephalopod\",\n\t  \"chameleon\",\n\t  \"cheetah\",\n\t  \"chickadee\",\n\t  \"chicken\",\n\t  \"chimpanzee\",\n\t  \"chinchilla\",\n\t  \"chipmunk\",\n\t  \"clam\",\n\t  \"clownfish\",\n\t  \"cobra\",\n\t  \"cockroach\",\n\t  \"cod\",\n\t  \"condor\",\n\t  \"constrictor\",\n\t  \"coral\",\n\t  \"cougar\",\n\t  \"cow\",\n\t  \"coyote\",\n\t  \"crab\",\n\t  \"crane\",\n\t  \"crawdad\",\n\t  \"crayfish\",\n\t  \"cricket\",\n\t  \"crocodile\",\n\t  \"crow\",\n\t  \"cuckoo\",\n\t  \"cicada\",\n\t  \"damselfly\",\n\t  \"deer\",\n\t  \"dingo\",\n\t  \"dinosaur\",\n\t  \"dog\",\n\t  \"dolphin\",\n\t  \"donkey\",\n\t  \"dormouse\",\n\t  \"dove\",\n\t  \"dragonfly\",\n\t  \"dragon\",\n\t  \"duck\",\n\t  \"eagle\",\n\t  \"earthworm\",\n\t  \"earwig\",\n\t  \"echidna\",\n\t  \"eel\",\n\t  \"egret\",\n\t  \"elephant\",\n\t  \"elk\",\n\t  \"emu\",\n\t  \"ermine\",\n\t  \"falcon\",\n\t  \"ferret\",\n\t  \"finch\",\n\t  \"firefly\",\n\t  \"fish\",\n\t  \"flamingo\",\n\t  \"flea\",\n\t  \"fly\",\n\t  \"flyingfish\",\n\t  \"fowl\",\n\t  \"fox\",\n\t  \"frog\",\n\t  \"gamefowl\",\n\t  \"galliform\",\n\t  \"gazelle\",\n\t  \"gecko\",\n\t  \"gerbil\",\n\t  \"gibbon\",\n\t  \"giraffe\",\n\t  \"goat\",\n\t  \"goldfish\",\n\t  \"goose\",\n\t  \"gopher\",\n\t  \"gorilla\",\n\t  \"grasshopper\",\n\t  \"grouse\",\n\t  \"guan\",\n\t  \"guanaco\",\n\t  \"guineafowl\",\n\t  \"gull\",\n\t  \"guppy\",\n\t  \"haddock\",\n\t  \"halibut\",\n\t  \"hamster\",\n\t  \"hare\",\n\t  \"harrier\",\n\t  \"hawk\",\n\t  \"hedgehog\",\n\t  \"heron\",\n\t  \"herring\",\n\t  \"hippopotamus\",\n\t  \"hookworm\",\n\t  \"hornet\",\n\t  \"horse\",\n\t  \"hoverfly\",\n\t  \"hummingbird\",\n\t  \"hyena\",\n\t  \"iguana\",\n\t  \"impala\",\n\t  \"jackal\",\n\t  \"jaguar\",\n\t  \"jay\",\n\t  \"jellyfish\",\n\t  \"junglefowl\",\n\t  \"kangaroo\",\n\t  \"kingfisher\",\n\t  \"kite\",\n\t  \"kiwi\",\n\t  \"koala\",\n\t  \"koi\",\n\t  \"krill\",\n\t  \"ladybug\",\n\t  \"lamprey\",\n\t  \"landfowl\",\n\t  \"lark\",\n\t  \"leech\",\n\t  \"lemming\",\n\t  \"lemur\",\n\t  \"leopard\",\n\t  \"leopon\",\n\t  \"limpet\",\n\t  \"lion\",\n\t  \"lizard\",\n\t  \"llama\",\n\t  \"lobster\",\n\t  \"locust\",\n\t  \"loon\",\n\t  \"louse\",\n\t  \"lungfish\",\n\t  \"lynx\",\n\t  \"macaw\",\n\t  \"mackerel\",\n\t  \"magpie\",\n\t  \"mammal\",\n\t  \"manatee\",\n\t  \"mandrill\",\n\t  \"marlin\",\n\t  \"marmoset\",\n\t  \"marmot\",\n\t  \"marsupial\",\n\t  \"marten\",\n\t  \"mastodon\",\n\t  \"meadowlark\",\n\t  \"meerkat\",\n\t  \"mink\",\n\t  \"minnow\",\n\t  \"mite\",\n\t  \"mockingbird\",\n\t  \"mole\",\n\t  \"mollusk\",\n\t  \"mongoose\",\n\t  \"monkey\",\n\t  \"moose\",\n\t  \"mosquito\",\n\t  \"moth\",\n\t  \"mouse\",\n\t  \"mule\",\n\t  \"muskox\",\n\t  \"narwhal\",\n\t  \"newt\",\n\t  \"nightingale\",\n\t  \"ocelot\",\n\t  \"octopus\",\n\t  \"opossum\",\n\t  \"orangutan\",\n\t  \"orca\",\n\t  \"ostrich\",\n\t  \"otter\",\n\t  \"owl\",\n\t  \"ox\",\n\t  \"panda\",\n\t  \"panther\",\n\t  \"parakeet\",\n\t  \"parrot\",\n\t  \"parrotfish\",\n\t  \"partridge\",\n\t  \"peacock\",\n\t  \"peafowl\",\n\t  \"pelican\",\n\t  \"penguin\",\n\t  \"perch\",\n\t  \"pheasant\",\n\t  \"pig\",\n\t  \"pigeon\",\n\t  \"pike\",\n\t  \"pinniped\",\n\t  \"piranha\",\n\t  \"planarian\",\n\t  \"platypus\",\n\t  \"pony\",\n\t  \"porcupine\",\n\t  \"porpoise\",\n\t  \"possum\",\n\t  \"prawn\",\n\t  \"primate\",\n\t  \"ptarmigan\",\n\t  \"puffin\",\n\t  \"puma\",\n\t  \"python\",\n\t  \"quail\",\n\t  \"quelea\",\n\t  \"quokka\",\n\t  \"rabbit\",\n\t  \"raccoon\",\n\t  \"rat\",\n\t  \"rattlesnake\",\n\t  \"raven\",\n\t  \"reindeer\",\n\t  \"reptile\",\n\t  \"rhinoceros\",\n\t  \"roadrunner\",\n\t  \"rodent\",\n\t  \"rook\",\n\t  \"rooster\",\n\t  \"roundworm\",\n\t  \"sailfish\",\n\t  \"salamander\",\n\t  \"salmon\",\n\t  \"sawfish\",\n\t  \"scallop\",\n\t  \"scorpion\",\n\t  \"seahorse\",\n\t  \"shark\",\n\t  \"sheep\",\n\t  \"shrew\",\n\t  \"shrimp\",\n\t  \"silkworm\",\n\t  \"silverfish\",\n\t  \"skink\",\n\t  \"skunk\",\n\t  \"sloth\",\n\t  \"slug\",\n\t  \"smelt\",\n\t  \"snail\",\n\t  \"snake\",\n\t  \"snipe\",\n\t  \"sole\",\n\t  \"sparrow\",\n\t  \"spider\",\n\t  \"spoonbill\",\n\t  \"squid\",\n\t  \"squirrel\",\n\t  \"starfish\",\n\t  \"stingray\",\n\t  \"stoat\",\n\t  \"stork\",\n\t  \"sturgeon\",\n\t  \"swallow\",\n\t  \"swan\",\n\t  \"swift\",\n\t  \"swordfish\",\n\t  \"swordtail\",\n\t  \"tahr\",\n\t  \"takin\",\n\t  \"tapir\",\n\t  \"tarantula\",\n\t  \"tarsier\",\n\t  \"termite\",\n\t  \"tern\",\n\t  \"thrush\",\n\t  \"tick\",\n\t  \"tiger\",\n\t  \"tiglon\",\n\t  \"toad\",\n\t  \"tortoise\",\n\t  \"toucan\",\n\t  \"trout\",\n\t  \"tuna\",\n\t  \"turkey\",\n\t  \"turtle\",\n\t  \"urial\",\n\t  \"vicuna\",\n\t  \"viper\",\n\t  \"vole\",\n\t  \"vulture\",\n\t  \"wallaby\",\n\t  \"walrus\",\n\t  \"wasp\",\n\t  \"warbler\",\n\t  \"weasel\",\n\t  \"whale\",\n\t  \"whippet\",\n\t  \"whitefish\",\n\t  \"wildcat\",\n\t  \"wildebeest\",\n\t  \"wildfowl\",\n\t  \"wolf\",\n\t  \"wolverine\",\n\t  \"wombat\",\n\t  \"woodpecker\",\n\t  \"worm\",\n\t  \"wren\",\n\t  \"xerinae\",\n\t  \"yak\",\n\t  \"zebra\",\n\t  \"alpaca\",\n\t  \"cat\",\n\t  \"cattle\",\n\t  \"chicken\",\n\t  \"dog\",\n\t  \"donkey\",\n\t  \"ferret\",\n\t  \"gayal\",\n\t  \"goldfish\",\n\t  \"guppy\",\n\t  \"horse\",\n\t  \"koi\",\n\t  \"llama\",\n\t  \"sheep\",\n\t  \"yak\"\n\t]\n\t;\n\n\tvar adjectives = [\n\t  \"aback\",\n\t  \"abaft\",\n\t  \"abandoned\",\n\t  \"abashed\",\n\t  \"aberrant\",\n\t  \"abhorrent\",\n\t  \"abiding\",\n\t  \"abject\",\n\t  \"ablaze\",\n\t  \"able\",\n\t  \"abnormal\",\n\t  \"aboard\",\n\t  \"aboriginal\",\n\t  \"abortive\",\n\t  \"abounding\",\n\t  \"abrasive\",\n\t  \"abrupt\",\n\t  \"absent\",\n\t  \"absolute\",\n\t  \"absorbed\",\n\t  \"absorbing\",\n\t  \"abstracted\",\n\t  \"absurd\",\n\t  \"abundant\",\n\t  \"abusive\",\n\t  \"academic\",\n\t  \"acceptable\",\n\t  \"accessible\",\n\t  \"accidental\",\n\t  \"acclaimed\",\n\t  \"accomplished\",\n\t  \"accurate\",\n\t  \"aching\",\n\t  \"acid\",\n\t  \"acidic\",\n\t  \"acoustic\",\n\t  \"acrid\",\n\t  \"acrobatic\",\n\t  \"active\",\n\t  \"actual\",\n\t  \"actually\",\n\t  \"ad hoc\",\n\t  \"adamant\",\n\t  \"adaptable\",\n\t  \"addicted\",\n\t  \"adept\",\n\t  \"adhesive\",\n\t  \"adjoining\",\n\t  \"admirable\",\n\t  \"admired\",\n\t  \"adolescent\",\n\t  \"adorable\",\n\t  \"adored\",\n\t  \"advanced\",\n\t  \"adventurous\",\n\t  \"affectionate\",\n\t  \"afraid\",\n\t  \"aged\",\n\t  \"aggravating\",\n\t  \"aggressive\",\n\t  \"agile\",\n\t  \"agitated\",\n\t  \"agonizing\",\n\t  \"agreeable\",\n\t  \"ahead\",\n\t  \"ajar\",\n\t  \"alarmed\",\n\t  \"alarming\",\n\t  \"alcoholic\",\n\t  \"alert\",\n\t  \"alienated\",\n\t  \"alike\",\n\t  \"alive\",\n\t  \"all\",\n\t  \"alleged\",\n\t  \"alluring\",\n\t  \"aloof\",\n\t  \"altruistic\",\n\t  \"amazing\",\n\t  \"ambiguous\",\n\t  \"ambitious\",\n\t  \"amiable\",\n\t  \"ample\",\n\t  \"amuck\",\n\t  \"amused\",\n\t  \"amusing\",\n\t  \"anchored\",\n\t  \"ancient\",\n\t  \"ancient\",\n\t  \"angelic\",\n\t  \"angry\",\n\t  \"angry\",\n\t  \"anguished\",\n\t  \"animated\",\n\t  \"annoyed\",\n\t  \"annoying\",\n\t  \"annual\",\n\t  \"another\",\n\t  \"antique\",\n\t  \"antsy\",\n\t  \"anxious\",\n\t  \"any\",\n\t  \"apathetic\",\n\t  \"appetizing\",\n\t  \"apprehensive\",\n\t  \"appropriate\",\n\t  \"apt\",\n\t  \"aquatic\",\n\t  \"arctic\",\n\t  \"arid\",\n\t  \"aromatic\",\n\t  \"arrogant\",\n\t  \"artistic\",\n\t  \"ashamed\",\n\t  \"aspiring\",\n\t  \"assorted\",\n\t  \"assured\",\n\t  \"astonishing\",\n\t  \"athletic\",\n\t  \"attached\",\n\t  \"attentive\",\n\t  \"attractive\",\n\t  \"auspicious\",\n\t  \"austere\",\n\t  \"authentic\",\n\t  \"authorized\",\n\t  \"automatic\",\n\t  \"available\",\n\t  \"avaricious\",\n\t  \"average\",\n\t  \"awake\",\n\t  \"aware\",\n\t  \"awesome\",\n\t  \"awful\",\n\t  \"awkward\",\n\t  \"axiomatic\",\n\t  \"babyish\",\n\t  \"back\",\n\t  \"bad\",\n\t  \"baggy\",\n\t  \"barbarous\",\n\t  \"bare\",\n\t  \"barren\",\n\t  \"bashful\",\n\t  \"basic\",\n\t  \"batty\",\n\t  \"bawdy\",\n\t  \"beautiful\",\n\t  \"beefy\",\n\t  \"befitting\",\n\t  \"belated\",\n\t  \"belligerent\",\n\t  \"beloved\",\n\t  \"beneficial\",\n\t  \"bent\",\n\t  \"berserk\",\n\t  \"best\",\n\t  \"better\",\n\t  \"bewildered\",\n\t  \"bewitched\",\n\t  \"big\",\n\t  \"big-hearted\",\n\t  \"billowy\",\n\t  \"biodegradable\",\n\t  \"bite-sized\",\n\t  \"biting\",\n\t  \"bitter\",\n\t  \"bizarre\",\n\t  \"black\",\n\t  \"black-and-white\",\n\t  \"bland\",\n\t  \"blank\",\n\t  \"blaring\",\n\t  \"bleak\",\n\t  \"blind\",\n\t  \"blissful\",\n\t  \"blond\",\n\t  \"bloody\",\n\t  \"blue\",\n\t  \"blue-eyed\",\n\t  \"blushing\",\n\t  \"bogus\",\n\t  \"boiling\",\n\t  \"bold\",\n\t  \"bony\",\n\t  \"boorish\",\n\t  \"bored\",\n\t  \"boring\",\n\t  \"bossy\",\n\t  \"both\",\n\t  \"bouncy\",\n\t  \"boundless\",\n\t  \"bountiful\",\n\t  \"bowed\",\n\t  \"brainy\",\n\t  \"brash\",\n\t  \"brave\",\n\t  \"brawny\",\n\t  \"breakable\",\n\t  \"breezy\",\n\t  \"brief\",\n\t  \"bright\",\n\t  \"brilliant\",\n\t  \"brisk\",\n\t  \"broad\",\n\t  \"broken\",\n\t  \"bronze\",\n\t  \"brown\",\n\t  \"bruised\",\n\t  \"bubbly\",\n\t  \"bulky\",\n\t  \"bumpy\",\n\t  \"buoyant\",\n\t  \"burdensome\",\n\t  \"burly\",\n\t  \"bustling\",\n\t  \"busy\",\n\t  \"buttery\",\n\t  \"buzzing\",\n\t  \"cagey\",\n\t  \"calculating\",\n\t  \"callous\",\n\t  \"calm\",\n\t  \"candid\",\n\t  \"canine\",\n\t  \"capable\",\n\t  \"capital\",\n\t  \"capricious\",\n\t  \"carefree\",\n\t  \"careful\",\n\t  \"careless\",\n\t  \"caring\",\n\t  \"cautious\",\n\t  \"cavernous\",\n\t  \"ceaseless\",\n\t  \"celebrated\",\n\t  \"certain\",\n\t  \"changeable\",\n\t  \"charming\",\n\t  \"cheap\",\n\t  \"cheeky\",\n\t  \"cheerful\",\n\t  \"cheery\",\n\t  \"chemical\",\n\t  \"chief\",\n\t  \"childlike\",\n\t  \"chilly\",\n\t  \"chivalrous\",\n\t  \"chubby\",\n\t  \"chunky\",\n\t  \"circular\",\n\t  \"clammy\",\n\t  \"classic\",\n\t  \"classy\",\n\t  \"clean\",\n\t  \"clear\",\n\t  \"clear-cut\",\n\t  \"clever\",\n\t  \"cloistered\",\n\t  \"close\",\n\t  \"closed\",\n\t  \"cloudy\",\n\t  \"clueless\",\n\t  \"clumsy\",\n\t  \"cluttered\",\n\t  \"coarse\",\n\t  \"coherent\",\n\t  \"cold\",\n\t  \"colorful\",\n\t  \"colorless\",\n\t  \"colossal\",\n\t  \"colossal\",\n\t  \"combative\",\n\t  \"comfortable\",\n\t  \"common\",\n\t  \"compassionate\",\n\t  \"competent\",\n\t  \"complete\",\n\t  \"complex\",\n\t  \"complicated\",\n\t  \"composed\",\n\t  \"concerned\",\n\t  \"concrete\",\n\t  \"condemned\",\n\t  \"condescending\",\n\t  \"confused\",\n\t  \"conscious\",\n\t  \"considerate\",\n\t  \"constant\",\n\t  \"contemplative\",\n\t  \"content\",\n\t  \"conventional\",\n\t  \"convincing\",\n\t  \"convoluted\",\n\t  \"cooing\",\n\t  \"cooked\",\n\t  \"cool\",\n\t  \"cooperative\",\n\t  \"coordinated\",\n\t  \"corny\",\n\t  \"corrupt\",\n\t  \"costly\",\n\t  \"courageous\",\n\t  \"courteous\",\n\t  \"cowardly\",\n\t  \"crabby\",\n\t  \"crafty\",\n\t  \"craven\",\n\t  \"crazy\",\n\t  \"creamy\",\n\t  \"creative\",\n\t  \"creepy\",\n\t  \"criminal\",\n\t  \"crisp\",\n\t  \"critical\",\n\t  \"crooked\",\n\t  \"crowded\",\n\t  \"cruel\",\n\t  \"crushing\",\n\t  \"cuddly\",\n\t  \"cultivated\",\n\t  \"cultured\",\n\t  \"cumbersome\",\n\t  \"curious\",\n\t  \"curly\",\n\t  \"curved\",\n\t  \"curvy\",\n\t  \"cut\",\n\t  \"cute\",\n\t  \"cylindrical\",\n\t  \"cynical\",\n\t  \"daffy\",\n\t  \"daily\",\n\t  \"damaged\",\n\t  \"damaging\",\n\t  \"damp\",\n\t  \"dangerous\",\n\t  \"dapper\",\n\t  \"dapper\",\n\t  \"daring\",\n\t  \"dark\",\n\t  \"darling\",\n\t  \"dashing\",\n\t  \"dazzling\",\n\t  \"dead\",\n\t  \"deadly\",\n\t  \"deadpan\",\n\t  \"deafening\",\n\t  \"dear\",\n\t  \"dearest\",\n\t  \"debonair\",\n\t  \"decayed\",\n\t  \"deceitful\",\n\t  \"decent\",\n\t  \"decimal\",\n\t  \"decisive\",\n\t  \"decorous\",\n\t  \"deep\",\n\t  \"deeply\",\n\t  \"defeated\",\n\t  \"defective\",\n\t  \"defenseless\",\n\t  \"defensive\",\n\t  \"defiant\",\n\t  \"deficient\",\n\t  \"definite\",\n\t  \"delayed\",\n\t  \"delectable\",\n\t  \"delicate\",\n\t  \"delicious\",\n\t  \"delightful\",\n\t  \"delirious\",\n\t  \"demanding\",\n\t  \"demonic\",\n\t  \"dense\",\n\t  \"dental\",\n\t  \"dependable\",\n\t  \"dependent\",\n\t  \"depraved\",\n\t  \"depressed\",\n\t  \"deranged\",\n\t  \"descriptive\",\n\t  \"deserted\",\n\t  \"despicable\",\n\t  \"detailed\",\n\t  \"determined\",\n\t  \"devilish\",\n\t  \"devoted\",\n\t  \"didactic\",\n\t  \"different\",\n\t  \"difficult\",\n\t  \"digital\",\n\t  \"dilapidated\",\n\t  \"diligent\",\n\t  \"dim\",\n\t  \"diminutive\",\n\t  \"dimpled\",\n\t  \"dimwitted\",\n\t  \"direct\",\n\t  \"direful\",\n\t  \"dirty\",\n\t  \"disagreeable\",\n\t  \"disastrous\",\n\t  \"discreet\",\n\t  \"discrete\",\n\t  \"disfigured\",\n\t  \"disguised\",\n\t  \"disgusted\",\n\t  \"disgusting\",\n\t  \"dishonest\",\n\t  \"disillusioned\",\n\t  \"disloyal\",\n\t  \"dismal\",\n\t  \"dispensable\",\n\t  \"distant\",\n\t  \"distinct\",\n\t  \"distorted\",\n\t  \"distraught\",\n\t  \"distressed\",\n\t  \"disturbed\",\n\t  \"divergent\",\n\t  \"dizzy\",\n\t  \"domineering\",\n\t  \"dopey\",\n\t  \"doting\",\n\t  \"double\",\n\t  \"doubtful\",\n\t  \"downright\",\n\t  \"drab\",\n\t  \"draconian\",\n\t  \"drafty\",\n\t  \"drained\",\n\t  \"dramatic\",\n\t  \"dreary\",\n\t  \"droopy\",\n\t  \"drunk\",\n\t  \"dry\",\n\t  \"dual\",\n\t  \"dull\",\n\t  \"dull\",\n\t  \"dusty\",\n\t  \"dutiful\",\n\t  \"dynamic\",\n\t  \"dysfunctional\",\n\t  \"each\",\n\t  \"eager\",\n\t  \"early\",\n\t  \"earnest\",\n\t  \"earsplitting\",\n\t  \"earthy\",\n\t  \"easy\",\n\t  \"easy-going\",\n\t  \"eatable\",\n\t  \"economic\",\n\t  \"ecstatic\",\n\t  \"edible\",\n\t  \"educated\",\n\t  \"efficacious\",\n\t  \"efficient\",\n\t  \"eight\",\n\t  \"elaborate\",\n\t  \"elastic\",\n\t  \"elated\",\n\t  \"elderly\",\n\t  \"electric\",\n\t  \"elegant\",\n\t  \"elementary\",\n\t  \"elfin\",\n\t  \"elite\",\n\t  \"elliptical\",\n\t  \"emaciated\",\n\t  \"embarrassed\",\n\t  \"embellished\",\n\t  \"eminent\",\n\t  \"emotional\",\n\t  \"empty\",\n\t  \"enchanted\",\n\t  \"enchanting\",\n\t  \"encouraging\",\n\t  \"endurable\",\n\t  \"energetic\",\n\t  \"enlightened\",\n\t  \"enormous\",\n\t  \"enraged\",\n\t  \"entertaining\",\n\t  \"enthusiastic\",\n\t  \"entire\",\n\t  \"envious\",\n\t  \"envious\",\n\t  \"equable\",\n\t  \"equal\",\n\t  \"equatorial\",\n\t  \"erect\",\n\t  \"erratic\",\n\t  \"essential\",\n\t  \"esteemed\",\n\t  \"ethereal\",\n\t  \"ethical\",\n\t  \"euphoric\",\n\t  \"evanescent\",\n\t  \"evasive\",\n\t  \"even\",\n\t  \"evergreen\",\n\t  \"everlasting\",\n\t  \"every\",\n\t  \"evil\",\n\t  \"exalted\",\n\t  \"exasperated\",\n\t  \"excellent\",\n\t  \"excitable\",\n\t  \"excited\",\n\t  \"exciting\",\n\t  \"exclusive\",\n\t  \"exemplary\",\n\t  \"exhausted\",\n\t  \"exhilarated\",\n\t  \"exotic\",\n\t  \"expensive\",\n\t  \"experienced\",\n\t  \"expert\",\n\t  \"extensive\",\n\t  \"extra-large\",\n\t  \"extraneous\",\n\t  \"extra-small\",\n\t  \"extroverted\",\n\t  \"exuberant\",\n\t  \"exultant\",\n\t  \"fabulous\",\n\t  \"faded\",\n\t  \"failing\",\n\t  \"faint\",\n\t  \"fair\",\n\t  \"faithful\",\n\t  \"fake\",\n\t  \"fallacious\",\n\t  \"false\",\n\t  \"familiar\",\n\t  \"famous\",\n\t  \"fanatical\",\n\t  \"fancy\",\n\t  \"fantastic\",\n\t  \"far\",\n\t  \"faraway\",\n\t  \"far-flung\",\n\t  \"far-off\",\n\t  \"fascinated\",\n\t  \"fast\",\n\t  \"fat\",\n\t  \"fatal\",\n\t  \"fatherly\",\n\t  \"faulty\",\n\t  \"favorable\",\n\t  \"favorite\",\n\t  \"fearful\",\n\t  \"fearless\",\n\t  \"feeble\",\n\t  \"feigned\",\n\t  \"feisty\",\n\t  \"feline\",\n\t  \"female\",\n\t  \"feminine\",\n\t  \"fertile\",\n\t  \"festive\",\n\t  \"few\",\n\t  \"fickle\",\n\t  \"fierce\",\n\t  \"filthy\",\n\t  \"fine\",\n\t  \"finicky\",\n\t  \"finished\",\n\t  \"firm\",\n\t  \"first\",\n\t  \"firsthand\",\n\t  \"fitting\",\n\t  \"five\",\n\t  \"fixed\",\n\t  \"flagrant\",\n\t  \"flaky\",\n\t  \"flamboyant\",\n\t  \"flashy\",\n\t  \"flat\",\n\t  \"flawed\",\n\t  \"flawless\",\n\t  \"flickering\",\n\t  \"flimsy\",\n\t  \"flippant\",\n\t  \"floppy\",\n\t  \"flowery\",\n\t  \"flufy\",\n\t  \"fluid\",\n\t  \"flustered\",\n\t  \"fluttering\",\n\t  \"foamy\",\n\t  \"focused\",\n\t  \"fond\",\n\t  \"foolhardy\",\n\t  \"foolish\",\n\t  \"forceful\",\n\t  \"foregoing\",\n\t  \"forgetful\",\n\t  \"forked\",\n\t  \"formal\",\n\t  \"forsaken\",\n\t  \"forthright\",\n\t  \"fortunate\",\n\t  \"four\",\n\t  \"fragile\",\n\t  \"fragrant\",\n\t  \"frail\",\n\t  \"frank\",\n\t  \"frantic\",\n\t  \"frayed\",\n\t  \"free\",\n\t  \"freezing\",\n\t  \"french\",\n\t  \"frequent\",\n\t  \"fresh\",\n\t  \"fretful\",\n\t  \"friendly\",\n\t  \"frightened\",\n\t  \"frightening\",\n\t  \"frigid\",\n\t  \"frilly\",\n\t  \"frivolous\",\n\t  \"frizzy\",\n\t  \"front\",\n\t  \"frosty\",\n\t  \"frothy\",\n\t  \"frozen\",\n\t  \"frugal\",\n\t  \"fruitful\",\n\t  \"frustrating\",\n\t  \"full\",\n\t  \"fumbling\",\n\t  \"fumbling\",\n\t  \"functional\",\n\t  \"funny\",\n\t  \"furry\",\n\t  \"furtive\",\n\t  \"fussy\",\n\t  \"future\",\n\t  \"futuristic\",\n\t  \"fuzzy\",\n\t  \"gabby\",\n\t  \"gainful\",\n\t  \"gamy\",\n\t  \"gaping\",\n\t  \"gargantuan\",\n\t  \"garrulous\",\n\t  \"gaseous\",\n\t  \"gaudy\",\n\t  \"general\",\n\t  \"general\",\n\t  \"generous\",\n\t  \"gentle\",\n\t  \"genuine\",\n\t  \"ghastly\",\n\t  \"giant\",\n\t  \"giddy\",\n\t  \"gifted\",\n\t  \"gigantic\",\n\t  \"giving\",\n\t  \"glamorous\",\n\t  \"glaring\",\n\t  \"glass\",\n\t  \"gleaming\",\n\t  \"gleeful\",\n\t  \"glib\",\n\t  \"glistening\",\n\t  \"glittering\",\n\t  \"gloomy\",\n\t  \"glorious\",\n\t  \"glossy\",\n\t  \"glum\",\n\t  \"godly\",\n\t  \"golden\",\n\t  \"good\",\n\t  \"good-natured\",\n\t  \"goofy\",\n\t  \"gorgeous\",\n\t  \"graceful\",\n\t  \"gracious\",\n\t  \"grand\",\n\t  \"grandiose\",\n\t  \"grandiose\",\n\t  \"granular\",\n\t  \"grateful\",\n\t  \"gratis\",\n\t  \"grave\",\n\t  \"gray\",\n\t  \"greasy\",\n\t  \"great\",\n\t  \"greedy\",\n\t  \"green\",\n\t  \"gregarious\",\n\t  \"grey\",\n\t  \"grieving\",\n\t  \"grim\",\n\t  \"grimy\",\n\t  \"gripping\",\n\t  \"grizzled\",\n\t  \"groovy\",\n\t  \"gross\",\n\t  \"grotesque\",\n\t  \"grouchy\",\n\t  \"grounded\",\n\t  \"growing\",\n\t  \"growling\",\n\t  \"grown\",\n\t  \"grubby\",\n\t  \"gruesome\",\n\t  \"grumpy\",\n\t  \"guarded\",\n\t  \"guiltless\",\n\t  \"guilty\",\n\t  \"gullible\",\n\t  \"gummy\",\n\t  \"gusty\",\n\t  \"guttural\",\n\t  \"habitual\",\n\t  \"hairy\",\n\t  \"half\",\n\t  \"half\",\n\t  \"hallowed\",\n\t  \"halting\",\n\t  \"handmade\",\n\t  \"handsome\",\n\t  \"handsomely\",\n\t  \"handy\",\n\t  \"hanging\",\n\t  \"hapless\",\n\t  \"happy\",\n\t  \"happy-go-lucky\",\n\t  \"hard\",\n\t  \"hard-to-find\",\n\t  \"harebrained\",\n\t  \"harmful\",\n\t  \"harmless\",\n\t  \"harmonious\",\n\t  \"harsh\",\n\t  \"hasty\",\n\t  \"hateful\",\n\t  \"haunting\",\n\t  \"heady\",\n\t  \"healthy\",\n\t  \"heartbreaking\",\n\t  \"heartfelt\",\n\t  \"hearty\",\n\t  \"heavenly\",\n\t  \"heavy\",\n\t  \"hefty\",\n\t  \"hellish\",\n\t  \"helpful\",\n\t  \"helpless\",\n\t  \"hesitant\",\n\t  \"hidden\",\n\t  \"hideous\",\n\t  \"high\",\n\t  \"highfalutin\",\n\t  \"high-level\",\n\t  \"high-pitched\",\n\t  \"hilarious\",\n\t  \"hissing\",\n\t  \"historical\",\n\t  \"hoarse\",\n\t  \"holistic\",\n\t  \"hollow\",\n\t  \"homeless\",\n\t  \"homely\",\n\t  \"honest\",\n\t  \"honorable\",\n\t  \"honored\",\n\t  \"hopeful\",\n\t  \"horrible\",\n\t  \"horrific\",\n\t  \"hospitable\",\n\t  \"hot\",\n\t  \"huge\",\n\t  \"hulking\",\n\t  \"humble\",\n\t  \"humdrum\",\n\t  \"humiliating\",\n\t  \"humming\",\n\t  \"humongous\",\n\t  \"humorous\",\n\t  \"hungry\",\n\t  \"hurried\",\n\t  \"hurt\",\n\t  \"hurtful\",\n\t  \"hushed\",\n\t  \"husky\",\n\t  \"hypnotic\",\n\t  \"hysterical\",\n\t  \"icky\",\n\t  \"icy\",\n\t  \"ideal\",\n\t  \"ideal\",\n\t  \"idealistic\",\n\t  \"identical\",\n\t  \"idiotic\",\n\t  \"idle\",\n\t  \"idolized\",\n\t  \"ignorant\",\n\t  \"ill\",\n\t  \"illegal\",\n\t  \"ill-fated\",\n\t  \"ill-informed\",\n\t  \"illiterate\",\n\t  \"illustrious\",\n\t  \"imaginary\",\n\t  \"imaginative\",\n\t  \"immaculate\",\n\t  \"immaterial\",\n\t  \"immediate\",\n\t  \"immense\",\n\t  \"imminent\",\n\t  \"impartial\",\n\t  \"impassioned\",\n\t  \"impeccable\",\n\t  \"imperfect\",\n\t  \"imperturbable\",\n\t  \"impish\",\n\t  \"impolite\",\n\t  \"important\",\n\t  \"imported\",\n\t  \"impossible\",\n\t  \"impractical\",\n\t  \"impressionable\",\n\t  \"impressive\",\n\t  \"improbable\",\n\t  \"impure\",\n\t  \"inborn\",\n\t  \"incandescent\",\n\t  \"incomparable\",\n\t  \"incompatible\",\n\t  \"incompetent\",\n\t  \"incomplete\",\n\t  \"inconclusive\",\n\t  \"inconsequential\",\n\t  \"incredible\",\n\t  \"indelible\",\n\t  \"indolent\",\n\t  \"industrious\",\n\t  \"inexpensive\",\n\t  \"inexperienced\",\n\t  \"infamous\",\n\t  \"infantile\",\n\t  \"infatuated\",\n\t  \"inferior\",\n\t  \"infinite\",\n\t  \"informal\",\n\t  \"innate\",\n\t  \"innocent\",\n\t  \"inquisitive\",\n\t  \"insecure\",\n\t  \"insidious\",\n\t  \"insignificant\",\n\t  \"insistent\",\n\t  \"instinctive\",\n\t  \"instructive\",\n\t  \"insubstantial\",\n\t  \"intelligent\",\n\t  \"intent\",\n\t  \"intentional\",\n\t  \"interesting\",\n\t  \"internal\",\n\t  \"international\",\n\t  \"intrepid\",\n\t  \"intrigued\",\n\t  \"invincible\",\n\t  \"irate\",\n\t  \"ironclad\",\n\t  \"irresponsible\",\n\t  \"irritable\",\n\t  \"irritating\",\n\t  \"itchy\",\n\t  \"jaded\",\n\t  \"jagged\",\n\t  \"jam-packed\",\n\t  \"jaunty\",\n\t  \"jazzy\",\n\t  \"jealous\",\n\t  \"jittery\",\n\t  \"jobless\",\n\t  \"joint\",\n\t  \"jolly\",\n\t  \"jovial\",\n\t  \"joyful\",\n\t  \"joyous\",\n\t  \"jubilant\",\n\t  \"judicious\",\n\t  \"juicy\",\n\t  \"jumbled\",\n\t  \"jumbo\",\n\t  \"jumpy\",\n\t  \"jumpy\",\n\t  \"junior\",\n\t  \"juvenile\",\n\t  \"kaleidoscopic\",\n\t  \"kaput\",\n\t  \"keen\",\n\t  \"key\",\n\t  \"kind\",\n\t  \"kindhearted\",\n\t  \"kindly\",\n\t  \"klutzy\",\n\t  \"knobby\",\n\t  \"knotty\",\n\t  \"knowing\",\n\t  \"knowledgeable\",\n\t  \"known\",\n\t  \"kooky\",\n\t  \"kosher\",\n\t  \"labored\",\n\t  \"lackadaisical\",\n\t  \"lacking\",\n\t  \"lame\",\n\t  \"lame\",\n\t  \"lamentable\",\n\t  \"languid\",\n\t  \"lanky\",\n\t  \"large\",\n\t  \"last\",\n\t  \"lasting\",\n\t  \"late\",\n\t  \"laughable\",\n\t  \"lavish\",\n\t  \"lawful\",\n\t  \"lazy\",\n\t  \"leading\",\n\t  \"leafy\",\n\t  \"lean\",\n\t  \"learned\",\n\t  \"left\",\n\t  \"legal\",\n\t  \"legitimate\",\n\t  \"lethal\",\n\t  \"level\",\n\t  \"lewd\",\n\t  \"light\",\n\t  \"lighthearted\",\n\t  \"likable\",\n\t  \"like\",\n\t  \"likeable\",\n\t  \"likely\",\n\t  \"limited\",\n\t  \"limp\",\n\t  \"limping\",\n\t  \"linear\",\n\t  \"lined\",\n\t  \"liquid\",\n\t  \"literate\",\n\t  \"little\",\n\t  \"live\",\n\t  \"lively\",\n\t  \"livid\",\n\t  \"living\",\n\t  \"loathsome\",\n\t  \"lone\",\n\t  \"lonely\",\n\t  \"long\",\n\t  \"longing\",\n\t  \"long-term\",\n\t  \"loose\",\n\t  \"lopsided\",\n\t  \"lost\",\n\t  \"loud\",\n\t  \"loutish\",\n\t  \"lovable\",\n\t  \"lovely\",\n\t  \"loving\",\n\t  \"low\",\n\t  \"lowly\",\n\t  \"loyal\",\n\t  \"lucky\",\n\t  \"ludicrous\",\n\t  \"lumbering\",\n\t  \"luminous\",\n\t  \"lumpy\",\n\t  \"lush\",\n\t  \"lustrous\",\n\t  \"luxuriant\",\n\t  \"luxurious\",\n\t  \"lying\",\n\t  \"lyrical\",\n\t  \"macabre\",\n\t  \"macho\",\n\t  \"mad\",\n\t  \"maddening\",\n\t  \"made-up\",\n\t  \"madly\",\n\t  \"magenta\",\n\t  \"magical\",\n\t  \"magnificent\",\n\t  \"majestic\",\n\t  \"major\",\n\t  \"makeshift\",\n\t  \"male\",\n\t  \"malicious\",\n\t  \"mammoth\",\n\t  \"maniacal\",\n\t  \"many\",\n\t  \"marked\",\n\t  \"married\",\n\t  \"marvelous\",\n\t  \"masculine\",\n\t  \"massive\",\n\t  \"material\",\n\t  \"materialistic\",\n\t  \"mature\",\n\t  \"meager\",\n\t  \"mealy\",\n\t  \"mean\",\n\t  \"measly\",\n\t  \"meaty\",\n\t  \"medical\",\n\t  \"mediocre\",\n\t  \"medium\",\n\t  \"meek\",\n\t  \"melancholy\",\n\t  \"mellow\",\n\t  \"melodic\",\n\t  \"melted\",\n\t  \"memorable\",\n\t  \"menacing\",\n\t  \"merciful\",\n\t  \"mere\",\n\t  \"merry\",\n\t  \"messy\",\n\t  \"metallic\",\n\t  \"mighty\",\n\t  \"mild\",\n\t  \"military\",\n\t  \"milky\",\n\t  \"mindless\",\n\t  \"miniature\",\n\t  \"minor\",\n\t  \"minty\",\n\t  \"minute\",\n\t  \"miscreant\",\n\t  \"miserable\",\n\t  \"miserly\",\n\t  \"misguided\",\n\t  \"mistaken\",\n\t  \"misty\",\n\t  \"mixed\",\n\t  \"moaning\",\n\t  \"modern\",\n\t  \"modest\",\n\t  \"moist\",\n\t  \"moldy\",\n\t  \"momentous\",\n\t  \"monstrous\",\n\t  \"monthly\",\n\t  \"monumental\",\n\t  \"moody\",\n\t  \"moral\",\n\t  \"mortified\",\n\t  \"motherly\",\n\t  \"motionless\",\n\t  \"mountainous\",\n\t  \"muddled\",\n\t  \"muddy\",\n\t  \"muffled\",\n\t  \"multicolored\",\n\t  \"mundane\",\n\t  \"mundane\",\n\t  \"murky\",\n\t  \"mushy\",\n\t  \"musty\",\n\t  \"mute\",\n\t  \"muted\",\n\t  \"mysterious\",\n\t  \"naive\",\n\t  \"nappy\",\n\t  \"narrow\",\n\t  \"nasty\",\n\t  \"natural\",\n\t  \"naughty\",\n\t  \"nauseating\",\n\t  \"nautical\",\n\t  \"near\",\n\t  \"neat\",\n\t  \"nebulous\",\n\t  \"necessary\",\n\t  \"needless\",\n\t  \"needy\",\n\t  \"negative\",\n\t  \"neglected\",\n\t  \"negligible\",\n\t  \"neighboring\",\n\t  \"neighborly\",\n\t  \"nervous\",\n\t  \"nervous\",\n\t  \"new\",\n\t  \"next\",\n\t  \"nice\",\n\t  \"nice\",\n\t  \"nifty\",\n\t  \"nimble\",\n\t  \"nine\",\n\t  \"nippy\",\n\t  \"nocturnal\",\n\t  \"noiseless\",\n\t  \"noisy\",\n\t  \"nonchalant\",\n\t  \"nondescript\",\n\t  \"nonsensical\",\n\t  \"nonstop\",\n\t  \"normal\",\n\t  \"nostalgic\",\n\t  \"nosy\",\n\t  \"notable\",\n\t  \"noted\",\n\t  \"noteworthy\",\n\t  \"novel\",\n\t  \"noxious\",\n\t  \"null\",\n\t  \"numb\",\n\t  \"numberless\",\n\t  \"numerous\",\n\t  \"nutritious\",\n\t  \"nutty\",\n\t  \"oafish\",\n\t  \"obedient\",\n\t  \"obeisant\",\n\t  \"obese\",\n\t  \"oblivious\",\n\t  \"oblong\",\n\t  \"obnoxious\",\n\t  \"obscene\",\n\t  \"obsequious\",\n\t  \"observant\",\n\t  \"obsolete\",\n\t  \"obtainable\",\n\t  \"obvious\",\n\t  \"occasional\",\n\t  \"oceanic\",\n\t  \"odd\",\n\t  \"oddball\",\n\t  \"offbeat\",\n\t  \"offensive\",\n\t  \"official\",\n\t  \"oily\",\n\t  \"old\",\n\t  \"old-fashioned\",\n\t  \"omniscient\",\n\t  \"one\",\n\t  \"onerous\",\n\t  \"only\",\n\t  \"open\",\n\t  \"opposite\",\n\t  \"optimal\",\n\t  \"optimistic\",\n\t  \"opulent\",\n\t  \"orange\",\n\t  \"orderly\",\n\t  \"ordinary\",\n\t  \"organic\",\n\t  \"original\",\n\t  \"ornate\",\n\t  \"ornery\",\n\t  \"ossified\",\n\t  \"other\",\n\t  \"our\",\n\t  \"outgoing\",\n\t  \"outlandish\",\n\t  \"outlying\",\n\t  \"outrageous\",\n\t  \"outstanding\",\n\t  \"oval\",\n\t  \"overconfident\",\n\t  \"overcooked\",\n\t  \"overdue\",\n\t  \"overjoyed\",\n\t  \"overlooked\",\n\t  \"overrated\",\n\t  \"overt\",\n\t  \"overwrought\",\n\t  \"painful\",\n\t  \"painstaking\",\n\t  \"palatable\",\n\t  \"pale\",\n\t  \"paltry\",\n\t  \"panicky\",\n\t  \"panoramic\",\n\t  \"parallel\",\n\t  \"parched\",\n\t  \"parsimonious\",\n\t  \"partial\",\n\t  \"passionate\",\n\t  \"past\",\n\t  \"pastel\",\n\t  \"pastoral\",\n\t  \"pathetic\",\n\t  \"peaceful\",\n\t  \"penitent\",\n\t  \"peppery\",\n\t  \"perfect\",\n\t  \"perfumed\",\n\t  \"periodic\",\n\t  \"perky\",\n\t  \"permissible\",\n\t  \"perpetual\",\n\t  \"perplexed\",\n\t  \"personal\",\n\t  \"pertinent\",\n\t  \"pesky\",\n\t  \"pessimistic\",\n\t  \"petite\",\n\t  \"petty\",\n\t  \"petty\",\n\t  \"phobic\",\n\t  \"phony\",\n\t  \"physical\",\n\t  \"picayune\",\n\t  \"piercing\",\n\t  \"pink\",\n\t  \"piquant\",\n\t  \"pitiful\",\n\t  \"placid\",\n\t  \"plain\",\n\t  \"plaintive\",\n\t  \"plant\",\n\t  \"plastic\",\n\t  \"plausible\",\n\t  \"playful\",\n\t  \"pleasant\",\n\t  \"pleased\",\n\t  \"pleasing\",\n\t  \"plucky\",\n\t  \"plump\",\n\t  \"plush\",\n\t  \"pointed\",\n\t  \"pointless\",\n\t  \"poised\",\n\t  \"polished\",\n\t  \"polite\",\n\t  \"political\",\n\t  \"pompous\",\n\t  \"poor\",\n\t  \"popular\",\n\t  \"portly\",\n\t  \"posh\",\n\t  \"positive\",\n\t  \"possessive\",\n\t  \"possible\",\n\t  \"potable\",\n\t  \"powerful\",\n\t  \"powerless\",\n\t  \"practical\",\n\t  \"precious\",\n\t  \"premium\",\n\t  \"present\",\n\t  \"present\",\n\t  \"prestigious\",\n\t  \"pretty\",\n\t  \"previous\",\n\t  \"pricey\",\n\t  \"prickly\",\n\t  \"primary\",\n\t  \"prime\",\n\t  \"pristine\",\n\t  \"private\",\n\t  \"prize\",\n\t  \"probable\",\n\t  \"productive\",\n\t  \"profitable\",\n\t  \"profuse\",\n\t  \"proper\",\n\t  \"protective\",\n\t  \"proud\",\n\t  \"prudent\",\n\t  \"psychedelic\",\n\t  \"psychotic\",\n\t  \"public\",\n\t  \"puffy\",\n\t  \"pumped\",\n\t  \"punctual\",\n\t  \"pungent\",\n\t  \"puny\",\n\t  \"pure\",\n\t  \"purple\",\n\t  \"purring\",\n\t  \"pushy\",\n\t  \"pushy\",\n\t  \"putrid\",\n\t  \"puzzled\",\n\t  \"puzzling\",\n\t  \"quack\",\n\t  \"quaint\",\n\t  \"quaint\",\n\t  \"qualified\",\n\t  \"quarrelsome\",\n\t  \"quarterly\",\n\t  \"queasy\",\n\t  \"querulous\",\n\t  \"questionable\",\n\t  \"quick\",\n\t  \"quickest\",\n\t  \"quick-witted\",\n\t  \"quiet\",\n\t  \"quintessential\",\n\t  \"quirky\",\n\t  \"quixotic\",\n\t  \"quixotic\",\n\t  \"quizzical\",\n\t  \"rabid\",\n\t  \"racial\",\n\t  \"radiant\",\n\t  \"ragged\",\n\t  \"rainy\",\n\t  \"rambunctious\",\n\t  \"rampant\",\n\t  \"rapid\",\n\t  \"rare\",\n\t  \"rash\",\n\t  \"raspy\",\n\t  \"ratty\",\n\t  \"raw\",\n\t  \"ready\",\n\t  \"real\",\n\t  \"realistic\",\n\t  \"reasonable\",\n\t  \"rebel\",\n\t  \"recent\",\n\t  \"receptive\",\n\t  \"reckless\",\n\t  \"recondite\",\n\t  \"rectangular\",\n\t  \"red\",\n\t  \"redundant\",\n\t  \"reflecting\",\n\t  \"reflective\",\n\t  \"regal\",\n\t  \"regular\",\n\t  \"reliable\",\n\t  \"relieved\",\n\t  \"remarkable\",\n\t  \"reminiscent\",\n\t  \"remorseful\",\n\t  \"remote\",\n\t  \"repentant\",\n\t  \"repulsive\",\n\t  \"required\",\n\t  \"resolute\",\n\t  \"resonant\",\n\t  \"respectful\",\n\t  \"responsible\",\n\t  \"responsive\",\n\t  \"revolving\",\n\t  \"rewarding\",\n\t  \"rhetorical\",\n\t  \"rich\",\n\t  \"right\",\n\t  \"righteous\",\n\t  \"rightful\",\n\t  \"rigid\",\n\t  \"ringed\",\n\t  \"ripe\",\n\t  \"ritzy\",\n\t  \"roasted\",\n\t  \"robust\",\n\t  \"romantic\",\n\t  \"roomy\",\n\t  \"rosy\",\n\t  \"rotating\",\n\t  \"rotten\",\n\t  \"rotund\",\n\t  \"rough\",\n\t  \"round\",\n\t  \"rowdy\",\n\t  \"royal\",\n\t  \"rubbery\",\n\t  \"ruddy\",\n\t  \"rude\",\n\t  \"rundown\",\n\t  \"runny\",\n\t  \"rural\",\n\t  \"rustic  rusty\",\n\t  \"ruthless\",\n\t  \"sable\",\n\t  \"sad\",\n\t  \"safe\",\n\t  \"salty\",\n\t  \"same\",\n\t  \"sandy\",\n\t  \"sane\",\n\t  \"sarcastic\",\n\t  \"sardonic\",\n\t  \"sassy\",\n\t  \"satisfied\",\n\t  \"satisfying\",\n\t  \"savory\",\n\t  \"scaly\",\n\t  \"scandalous\",\n\t  \"scant\",\n\t  \"scarce\",\n\t  \"scared\",\n\t  \"scary\",\n\t  \"scattered\",\n\t  \"scented\",\n\t  \"scholarly\",\n\t  \"scientific\",\n\t  \"scintillating\",\n\t  \"scornful\",\n\t  \"scratchy\",\n\t  \"scrawny\",\n\t  \"screeching\",\n\t  \"second\",\n\t  \"secondary\",\n\t  \"second-hand\",\n\t  \"secret\",\n\t  \"secretive\",\n\t  \"sedate\",\n\t  \"seemly\",\n\t  \"selective\",\n\t  \"self-assured\",\n\t  \"selfish\",\n\t  \"self-reliant\",\n\t  \"sentimental\",\n\t  \"separate\",\n\t  \"serene\",\n\t  \"serious\",\n\t  \"serpentine\",\n\t  \"several\",\n\t  \"severe\",\n\t  \"shabby\",\n\t  \"shadowy\",\n\t  \"shady\",\n\t  \"shaggy\",\n\t  \"shaky\",\n\t  \"shallow\",\n\t  \"shameful\",\n\t  \"shameless\",\n\t  \"sharp\",\n\t  \"shimmering\",\n\t  \"shiny\",\n\t  \"shivering\",\n\t  \"shocked\",\n\t  \"shocking\",\n\t  \"shoddy\",\n\t  \"short\",\n\t  \"short-term\",\n\t  \"showy\",\n\t  \"shrill\",\n\t  \"shut\",\n\t  \"shy\",\n\t  \"sick\",\n\t  \"silent\",\n\t  \"silky\",\n\t  \"silly\",\n\t  \"silver\",\n\t  \"similar\",\n\t  \"simple\",\n\t  \"simplistic\",\n\t  \"sincere\",\n\t  \"sinful\",\n\t  \"single\",\n\t  \"six\",\n\t  \"sizzling\",\n\t  \"skeletal\",\n\t  \"skillful\",\n\t  \"skinny\",\n\t  \"sleepy\",\n\t  \"slight\",\n\t  \"slim\",\n\t  \"slimy\",\n\t  \"slippery\",\n\t  \"sloppy\",\n\t  \"slow\",\n\t  \"slushy\",\n\t  \"small\",\n\t  \"smarmy\",\n\t  \"smart\",\n\t  \"smelly\",\n\t  \"smiling\",\n\t  \"smoggy\",\n\t  \"smooth\",\n\t  \"smug\",\n\t  \"snappy\",\n\t  \"snarling\",\n\t  \"sneaky\",\n\t  \"sniveling\",\n\t  \"snobbish\",\n\t  \"snoopy\",\n\t  \"snotty\",\n\t  \"sociable\",\n\t  \"soft\",\n\t  \"soggy\",\n\t  \"solid\",\n\t  \"somber\",\n\t  \"some\",\n\t  \"sophisticated\",\n\t  \"sordid\",\n\t  \"sore\",\n\t  \"sorrowful\",\n\t  \"soulful\",\n\t  \"soupy\",\n\t  \"sour\",\n\t  \"sour\",\n\t  \"spanish\",\n\t  \"sparkling\",\n\t  \"sparse\",\n\t  \"special\",\n\t  \"specific\",\n\t  \"spectacular\",\n\t  \"speedy\",\n\t  \"spherical\",\n\t  \"spicy\",\n\t  \"spiffy\",\n\t  \"spiky\",\n\t  \"spirited\",\n\t  \"spiritual\",\n\t  \"spiteful\",\n\t  \"splendid\",\n\t  \"spooky\",\n\t  \"spotless\",\n\t  \"spotted\",\n\t  \"spotty\",\n\t  \"spry\",\n\t  \"spurious\",\n\t  \"squalid\",\n\t  \"square\",\n\t  \"squeaky\",\n\t  \"squealing\",\n\t  \"squeamish\",\n\t  \"squiggly\",\n\t  \"stable\",\n\t  \"staid\",\n\t  \"stained\",\n\t  \"staking\",\n\t  \"stale\",\n\t  \"standard\",\n\t  \"standing\",\n\t  \"starchy\",\n\t  \"stark\",\n\t  \"starry\",\n\t  \"statuesque\",\n\t  \"steadfast\",\n\t  \"steady\",\n\t  \"steel\",\n\t  \"steep\",\n\t  \"stereotyped\",\n\t  \"sticky\",\n\t  \"stiff\",\n\t  \"stimulating\",\n\t  \"stingy\",\n\t  \"stormy\",\n\t  \"stout\",\n\t  \"straight\",\n\t  \"strange\",\n\t  \"strict\",\n\t  \"strident\",\n\t  \"striking\",\n\t  \"striped\",\n\t  \"strong\",\n\t  \"studious\",\n\t  \"stunning\",\n\t  \"stunning\",\n\t  \"stupendous\",\n\t  \"stupid\",\n\t  \"sturdy\",\n\t  \"stylish\",\n\t  \"subdued\",\n\t  \"submissive\",\n\t  \"subsequent\",\n\t  \"substantial\",\n\t  \"subtle\",\n\t  \"suburban\",\n\t  \"successful\",\n\t  \"succinct\",\n\t  \"succulent\",\n\t  \"sudden\",\n\t  \"sugary\",\n\t  \"sulky\",\n\t  \"sunny\",\n\t  \"super\",\n\t  \"superb\",\n\t  \"superficial\",\n\t  \"superior\",\n\t  \"supportive\",\n\t  \"supreme\",\n\t  \"sure-footed\",\n\t  \"surprised\",\n\t  \"suspicious\",\n\t  \"svelte\",\n\t  \"swanky\",\n\t  \"sweaty\",\n\t  \"sweet\",\n\t  \"sweltering\",\n\t  \"swift\",\n\t  \"sympathetic\",\n\t  \"symptomatic\",\n\t  \"synonymous\",\n\t  \"taboo\",\n\t  \"tacit\",\n\t  \"tacky\",\n\t  \"talented\",\n\t  \"talkative\",\n\t  \"tall\",\n\t  \"tame\",\n\t  \"tan\",\n\t  \"tangible\",\n\t  \"tangy\",\n\t  \"tart\",\n\t  \"tasteful\",\n\t  \"tasteless\",\n\t  \"tasty\",\n\t  \"tattered\",\n\t  \"taut\",\n\t  \"tawdry\",\n\t  \"tearful\",\n\t  \"tedious\",\n\t  \"teeming\",\n\t  \"teeny\",\n\t  \"teeny-tiny\",\n\t  \"telling\",\n\t  \"temporary\",\n\t  \"tempting\",\n\t  \"ten\",\n\t  \"tender\",\n\t  \"tense\",\n\t  \"tenuous\",\n\t  \"tepid\",\n\t  \"terrible\",\n\t  \"terrific\",\n\t  \"tested\",\n\t  \"testy\",\n\t  \"thankful\",\n\t  \"that\",\n\t  \"therapeutic\",\n\t  \"these\",\n\t  \"thick\",\n\t  \"thin\",\n\t  \"thinkable\",\n\t  \"third\",\n\t  \"thirsty\",\n\t  \"this\",\n\t  \"thorny\",\n\t  \"thorough\",\n\t  \"those\",\n\t  \"thoughtful\",\n\t  \"thoughtless\",\n\t  \"threadbare\",\n\t  \"threatening\",\n\t  \"three\",\n\t  \"thrifty\",\n\t  \"thundering\",\n\t  \"thunderous\",\n\t  \"tidy\",\n\t  \"tight\",\n\t  \"tightfisted\",\n\t  \"timely\",\n\t  \"tinted\",\n\t  \"tiny\",\n\t  \"tired\",\n\t  \"tiresome\",\n\t  \"toothsome\",\n\t  \"torn\",\n\t  \"torpid\",\n\t  \"total\",\n\t  \"tough\",\n\t  \"towering\",\n\t  \"tragic\",\n\t  \"trained\",\n\t  \"tranquil\",\n\t  \"trashy\",\n\t  \"traumatic\",\n\t  \"treasured\",\n\t  \"tremendous\",\n\t  \"triangular\",\n\t  \"tricky\",\n\t  \"trifling\",\n\t  \"trim\",\n\t  \"trite\",\n\t  \"trivial\",\n\t  \"troubled\",\n\t  \"truculent\",\n\t  \"true\",\n\t  \"trusting\",\n\t  \"trustworthy\",\n\t  \"trusty\",\n\t  \"truthful\",\n\t  \"tubby\",\n\t  \"turbulent\",\n\t  \"twin\",\n\t  \"two\",\n\t  \"typical\",\n\t  \"ubiquitous\",\n\t  \"ugliest\",\n\t  \"ugly\",\n\t  \"ultimate\",\n\t  \"ultra\",\n\t  \"unable\",\n\t  \"unaccountable\",\n\t  \"unarmed\",\n\t  \"unaware\",\n\t  \"unbecoming\",\n\t  \"unbiased\",\n\t  \"uncomfortable\",\n\t  \"uncommon\",\n\t  \"unconscious\",\n\t  \"uncovered\",\n\t  \"understated\",\n\t  \"understood\",\n\t  \"undesirable\",\n\t  \"unequal\",\n\t  \"unequaled\",\n\t  \"uneven\",\n\t  \"unfinished\",\n\t  \"unfit\",\n\t  \"unfolded\",\n\t  \"unfortunate\",\n\t  \"unhappy\",\n\t  \"unhealthy\",\n\t  \"uniform\",\n\t  \"unimportant\",\n\t  \"uninterested\",\n\t  \"unique\",\n\t  \"united\",\n\t  \"unkempt\",\n\t  \"unknown\",\n\t  \"unlawful\",\n\t  \"unlined\",\n\t  \"unlucky\",\n\t  \"unnatural\",\n\t  \"unpleasant\",\n\t  \"unrealistic\",\n\t  \"unripe\",\n\t  \"unruly\",\n\t  \"unselfish\",\n\t  \"unsightly\",\n\t  \"unsteady\",\n\t  \"unsuitable\",\n\t  \"unsung\",\n\t  \"untidy\",\n\t  \"untimely\",\n\t  \"untried\",\n\t  \"untrue\",\n\t  \"unused\",\n\t  \"unusual\",\n\t  \"unwelcome\",\n\t  \"unwieldy\",\n\t  \"unwitting\",\n\t  \"unwritten\",\n\t  \"upbeat\",\n\t  \"uppity\",\n\t  \"upright\",\n\t  \"upset\",\n\t  \"uptight\",\n\t  \"urban\",\n\t  \"usable\",\n\t  \"used\",\n\t  \"used\",\n\t  \"useful\",\n\t  \"useless\",\n\t  \"utilized\",\n\t  \"utopian\",\n\t  \"utter\",\n\t  \"uttermost\",\n\t  \"vacant\",\n\t  \"vacuous\",\n\t  \"vagabond\",\n\t  \"vague\",\n\t  \"vain\",\n\t  \"valid\",\n\t  \"valuable\",\n\t  \"vapid\",\n\t  \"variable\",\n\t  \"various\",\n\t  \"vast\",\n\t  \"velvety\",\n\t  \"venerated\",\n\t  \"vengeful\",\n\t  \"venomous\",\n\t  \"verdant\",\n\t  \"verifiable\",\n\t  \"versed\",\n\t  \"vexed\",\n\t  \"vibrant\",\n\t  \"vicious\",\n\t  \"victorious\",\n\t  \"vigilant\",\n\t  \"vigorous\",\n\t  \"villainous\",\n\t  \"violent\",\n\t  \"violet\",\n\t  \"virtual\",\n\t  \"virtuous\",\n\t  \"visible\",\n\t  \"vital\",\n\t  \"vivacious\",\n\t  \"vivid\",\n\t  \"voiceless\",\n\t  \"volatile\",\n\t  \"voluminous\",\n\t  \"voracious\",\n\t  \"vulgar\",\n\t  \"wacky\",\n\t  \"waggish\",\n\t  \"waiting\",\n\t  \"wakeful\",\n\t  \"wan\",\n\t  \"wandering\",\n\t  \"wanting\",\n\t  \"warlike\",\n\t  \"warm\",\n\t  \"warmhearted\",\n\t  \"warped\",\n\t  \"wary\",\n\t  \"wasteful\",\n\t  \"watchful\",\n\t  \"waterlogged\",\n\t  \"watery\",\n\t  \"wavy\",\n\t  \"weak\",\n\t  \"wealthy\",\n\t  \"weary\",\n\t  \"webbed\",\n\t  \"wee\",\n\t  \"weekly\",\n\t  \"weepy\",\n\t  \"weighty\",\n\t  \"weird\",\n\t  \"welcome\",\n\t  \"well-documented\",\n\t  \"well-groomed\",\n\t  \"well-informed\",\n\t  \"well-lit\",\n\t  \"well-made\",\n\t  \"well-off\",\n\t  \"well-to-do\",\n\t  \"well-worn\",\n\t  \"wet\",\n\t  \"which\",\n\t  \"whimsical\",\n\t  \"whirlwind\",\n\t  \"whispered\",\n\t  \"whispering\",\n\t  \"white\",\n\t  \"whole\",\n\t  \"wholesale\",\n\t  \"whopping\",\n\t  \"wicked\",\n\t  \"wide\",\n\t  \"wide-eyed\",\n\t  \"wiggly\",\n\t  \"wild\",\n\t  \"willing\",\n\t  \"wilted\",\n\t  \"winding\",\n\t  \"windy\",\n\t  \"winged\",\n\t  \"wiry\",\n\t  \"wise\",\n\t  \"wistful\",\n\t  \"witty\",\n\t  \"wobbly\",\n\t  \"woebegone\",\n\t  \"woeful\",\n\t  \"womanly\",\n\t  \"wonderful\",\n\t  \"wooden\",\n\t  \"woozy\",\n\t  \"wordy\",\n\t  \"workable\",\n\t  \"worldly\",\n\t  \"worn\",\n\t  \"worried\",\n\t  \"worrisome\",\n\t  \"worse\",\n\t  \"worst\",\n\t  \"worthless\",\n\t  \"worthwhile\",\n\t  \"worthy\",\n\t  \"wrathful\",\n\t  \"wretched\",\n\t  \"writhing\",\n\t  \"wrong\",\n\t  \"wry\",\n\t  \"xenophobic\",\n\t  \"yawning\",\n\t  \"yearly\",\n\t  \"yellow\",\n\t  \"yellowish\",\n\t  \"yielding\",\n\t  \"young\",\n\t  \"youthful\",\n\t  \"yummy\",\n\t  \"zany\",\n\t  \"zealous\",\n\t  \"zesty\",\n\t  \"zigzag\",\n\t  \"zippy\",\n\t  \"zonked\"\n\t]\n\t;\n\n\tfunction pickRandom ( array ) {\n\t\treturn array[ ~~( Math.random() * array.length ) ];\n\t}\n\n\tfunction nameyMcNameface (mcMode) {\n\t\tif ( mcMode === void 0 ) mcMode = false;\n\n\t\tvar animal = pickRandom(animals);\n\t\tif(mcMode) {\n\t\t\tanimal = 'mc' + animal.substr(0,1).toUpperCase() + animal.substr(1);\n\t\t}\n\n\t\treturn ((pickRandom(adjectives)) + \"-\" + animal);\n\t};\n\n\treturn nameyMcNameface;\n\n}));","import getName from 'namey-mcnameface';\n\nfunction rand(min, max) {\n\treturn min + ~~(Math.random() * (max - min));\n}\n\nfunction fill(len, fn) {\n\treturn Array(len).fill().map((_, i) => fn(i));\n}\n\nfunction createRandomGarbage() {\n\tconst numWords = rand(4, 50);\n\treturn fill(numWords, () => {\n\t\tconst numLetters = rand(3, 12);\n\t\treturn fill(numLetters, () => String.fromCharCode(rand(97,122))).join('')\n\t}).join(' ');\n}\n\nconst avatars = [\n\t// images from https://www.pexels.com/search/dog/\n\t'https://images.pexels.com/photos/356378/pexels-photo-356378.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/59523/pexels-photo-59523.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/406014/pexels-photo-406014.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/460823/pexels-photo-460823.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/58997/pexels-photo-58997.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/374906/pexels-photo-374906.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/434090/pexels-photo-434090.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/551628/pexels-photo-551628.jpeg?auto=compress&cs=tinysrgb&h=75',\n\t'https://images.pexels.com/photos/532310/pexels-photo-532310.jpeg?auto=compress&cs=tinysrgb&h=75'\n];\n\nexport default fill(1000, (i) => {\n\treturn {\n\t\tkey: `_${i}`,\n\t\tname: getName(),\n\t\tcontent: createRandomGarbage(),\n\t\tavatar: avatars[rand(0, avatars.length)]\n\t};\n});\n","<script>\n\texport let avatar;\n\texport let name;\n\texport let content;\n</script>\n\n<div class='card'>\n\t<span class='avatar' style='background: url({avatar})' ></span>\n\t<h2>{name}</h2>\n\t<p>{content}</p>\n</div>\n\n<style>\n\t.card {\n\t\tposition: relative;\n\t\tmargin: 0.5em;\n\t\tpadding: 0.5em 0.5em 0.5em 6em;\n\t\tborder: 1px solid #eee;\n\t\tborder-radius: 4px;\n\t\tbox-shadow: 2px 2px 4px rgba(0,0,0,0.1);\n\t\tmin-height: 5em;\n\t}\n\n\t.card::after {\n\t\tclear: both;\n\t\tdisplay: block;\n\t}\n\n\t.avatar {\n\t\tposition: absolute;\n\t\twidth: 5em;\n\t\theight: 5em;\n\t\tleft: 0.5em;\n\t\ttop: 0.5em;\n\t\tborder-radius: 50%;\n\t\tbackground: no-repeat 50% 50%;\n\t\tbackground-size: cover;\n\t}\n\n\th2 {\n\t\tmargin: 0 0 0.5em 0;\n\t\tfont-size: 16px;\n\t}\n\n\tp {\n\t\tmargin: 0;\n\t\tfont-size: 14px;\n\t}\n</style>\n","<!-- https://github.com/sveltejs/svelte-virtual-list -->\n\n<script>\n\timport VirtualList from '@sveltejs/svelte-virtual-list';\n\timport items from './data.js';\n\timport ListItem from './ListItem.svelte';\n\n\tlet start;\n\tlet end;\n</script>\n\n<h1>Virtual list</h1>\n<p>Instead of rendering all your data, &lt;VirtualList&gt; just renders the bits that are visible, keeping your page nice and light.</p>\n<p>The source code for the component is <a href='https://github.com/sveltejs/svelte-virtual-list'>here</a>.</p>\n\n<div class='container'>\n\t<VirtualList {items} bind:start bind:end let:item>\n\t\t<ListItem {...item}/>\n\t</VirtualList>\n\t<p>showing items {start}-{end}</p>\n</div>\n\n<style>\n\t.container {\n\t\tborder-top: 1px solid #333;\n\t\tborder-bottom: 1px solid #333;\n\t\tmin-height: 200px;\n\t\theight: calc(100vh - 15em);\n\t}\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'faucet'\n\t}\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_custom_element_data","prop","set_data","wholeText","set_style","key","important","style","setProperty","crossorigin","current_component","is_crossorigin","window","parent","error","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","outro_and_destroy_block","lookup","bind","index","props","bound","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","callbacks","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","indexOf","splice","slot_ctx","computed_style","getComputedStyle","z_index","parseInt","zIndex","position","iframe","tabIndex","unsubscribe","source","contentWindow","onload","r","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","set","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","rows","viewport","contents","visible","mounted","average_height","items","height","itemHeight","start","end","height_map","viewport_height","top","bottom","getElementsByTagName","scrollTop","content_height","row","offsetHeight","remaining","refresh","old_start","v","y","row_height","expected_height","actual_height","scrollTo","module","animals","adjectives","pickRandom","array","random","mcMode","animal","substr","toUpperCase","factory","rand","min","_","avatars","getName","content","String","fromCharCode","join","avatar","levels","updates","to_null_out","accounted_for","spread_props","body"],"mappings":"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CA,SACA,cACA,QACA,SACA,MACA,SACA,OACA,QACA,UACA,WACA,UACA,YACA,OACA,SACA,SACA,YACA,OACA,QACA,WACA,MACA,UACA,SACA,WACA,OACA,YACA,SACA,OACA,QACA,YACA,SACA,UACA,MACA,QACA,WACA,MACA,MACA,SACA,SACA,SACA,QACA,UACA,OACA,WACA,OACA,MACA,aACA,OACA,MACA,OACA,WACA,YACA,UACA,QACA,SACA,SACA,UACA,OACA,WACA,QACA,SACA,UACA,cACA,SACA,OACA,UACA,aACA,OACA,QACA,UACA,UACA,UACA,OACA,UACA,OACA,WACA,QACA,UACA,eACA,WACA,SACA,QACA,WACA,cACA,QACA,SACA,SACA,SACA,SACA,MACA,YACA,aACA,WACA,aACA,OACA,OACA,QACA,MACA,QACA,UACA,UACA,WACA,OACA,QACA,UACA,QACA,UACA,SACA,SACA,OACA,SACA,QACA,UACA,SACA,OACA,QACA,WACA,OACA,QACA,WACA,SACA,SACA,UACA,WACA,SACA,WACA,SACA,YACA,SACA,WACA,aACA,UACA,OACA,SACA,OACA,cACA,OACA,UACA,WACA,SACA,QACA,WACA,OACA,QACA,OACA,SACA,UACA,OACA,cACA,SACA,UACA,UACA,YACA,OACA,UACA,QACA,MACA,KACA,QACA,UACA,WACA,SACA,aACA,YACA,UACA,UACA,UACA,UACA,QACA,WACA,MACA,SACA,OACA,WACA,UACA,YACA,WACA,OACA,YACA,WACA,SACA,QACA,UACA,YACA,SACA,OACA,SACA,QACA,SACA,SACA,SACA,UACA,MACA,cACA,QACA,WACA,UACA,aACA,aACA,SACA,OACA,UACA,YACA,WACA,aACA,SACA,UACA,UACA,WACA,WACA,QACA,QACA,QACA,SACA,WACA,aACA,QACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,OACA,UACA,SACA,YACA,QACA,WACA,WACA,WACA,QACA,QACA,WACA,UACA,OACA,QACA,YACA,YACA,OACA,QACA,QACA,YACA,UACA,UACA,OACA,SACA,OACA,QACA,SACA,OACA,WACA,SACA,QACA,OACA,SACA,SACA,QACA,SACA,QACA,OACA,UACA,UACA,SACA,OACA,UACA,SACA,QACA,UACA,YACA,UACA,aACA,WACA,OACA,YACA,SACA,aACA,OACA,OACA,UACA,MACA,QACA,SACA,MACA,SACA,UACA,MACA,SACA,SACA,QACA,WACA,QACA,QACA,MACA,QACA,QACA,OAIEC,EAAa,CACf,QACA,QACA,YACA,UACA,WACA,YACA,UACA,SACA,SACA,OACA,WACA,SACA,aACA,WACA,YACA,WACA,SACA,SACA,WACA,WACA,YACA,aACA,SACA,WACA,UACA,WACA,aACA,aACA,aACA,YACA,eACA,WACA,SACA,OACA,SACA,WACA,QACA,YACA,SACA,SACA,WACA,SACA,UACA,YACA,WACA,QACA,WACA,YACA,YACA,UACA,aACA,WACA,SACA,WACA,cACA,eACA,SACA,OACA,cACA,aACA,QACA,WACA,YACA,YACA,QACA,OACA,UACA,WACA,YACA,QACA,YACA,QACA,QACA,MACA,UACA,WACA,QACA,aACA,UACA,YACA,YACA,UACA,QACA,QACA,SACA,UACA,WACA,UACA,UACA,UACA,QACA,QACA,YACA,WACA,UACA,WACA,SACA,UACA,UACA,QACA,UACA,MACA,YACA,aACA,eACA,cACA,MACA,UACA,SACA,OACA,WACA,WACA,WACA,UACA,WACA,WACA,UACA,cACA,WACA,WACA,YACA,aACA,aACA,UACA,YACA,aACA,YACA,YACA,aACA,UACA,QACA,QACA,UACA,QACA,UACA,YACA,UACA,OACA,MACA,QACA,YACA,OACA,SACA,UACA,QACA,QACA,QACA,YACA,QACA,YACA,UACA,cACA,UACA,aACA,OACA,UACA,OACA,SACA,aACA,YACA,MACA,cACA,UACA,gBACA,aACA,SACA,SACA,UACA,QACA,kBACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,SACA,OACA,YACA,WACA,QACA,UACA,OACA,OACA,UACA,QACA,SACA,QACA,OACA,SACA,YACA,YACA,QACA,SACA,QACA,QACA,SACA,YACA,SACA,QACA,SACA,YACA,QACA,QACA,SACA,SACA,QACA,UACA,SACA,QACA,QACA,UACA,aACA,QACA,WACA,OACA,UACA,UACA,QACA,cACA,UACA,OACA,SACA,SACA,UACA,UACA,aACA,WACA,UACA,WACA,SACA,WACA,YACA,YACA,aACA,UACA,aACA,WACA,QACA,SACA,WACA,SACA,WACA,QACA,YACA,SACA,aACA,SACA,SACA,WACA,SACA,UACA,SACA,QACA,QACA,YACA,SACA,aACA,QACA,SACA,SACA,WACA,SACA,YACA,SACA,WACA,OACA,WACA,YACA,WACA,WACA,YACA,cACA,SACA,gBACA,YACA,WACA,UACA,cACA,WACA,YACA,WACA,YACA,gBACA,WACA,YACA,cACA,WACA,gBACA,UACA,eACA,aACA,aACA,SACA,SACA,OACA,cACA,cACA,QACA,UACA,SACA,aACA,YACA,WACA,SACA,SACA,SACA,QACA,SACA,WACA,SACA,WACA,QACA,WACA,UACA,UACA,QACA,WACA,SACA,aACA,WACA,aACA,UACA,QACA,SACA,QACA,MACA,OACA,cACA,UACA,QACA,QACA,UACA,WACA,OACA,YACA,SACA,SACA,SACA,OACA,UACA,UACA,WACA,OACA,SACA,UACA,YACA,OACA,UACA,WACA,UACA,YACA,SACA,UACA,WACA,WACA,OACA,SACA,WACA,YACA,cACA,YACA,UACA,YACA,WACA,UACA,aACA,WACA,YACA,aACA,YACA,YACA,UACA,QACA,SACA,aACA,YACA,WACA,YACA,WACA,cACA,WACA,aACA,WACA,aACA,WACA,UACA,WACA,YACA,YACA,UACA,cACA,WACA,MACA,aACA,UACA,YACA,SACA,UACA,QACA,eACA,aACA,WACA,WACA,aACA,YACA,YACA,aACA,YACA,gBACA,WACA,SACA,cACA,UACA,WACA,YACA,aACA,aACA,YACA,YACA,QACA,cACA,QACA,SACA,SACA,WACA,YACA,OACA,YACA,SACA,UACA,WACA,SACA,SACA,QACA,MACA,OACA,OACA,OACA,QACA,UACA,UACA,gBACA,OACA,QACA,QACA,UACA,eACA,SACA,OACA,aACA,UACA,WACA,WACA,SACA,WACA,cACA,YACA,QACA,YACA,UACA,SACA,UACA,WACA,UACA,aACA,QACA,QACA,aACA,YACA,cACA,cACA,UACA,YACA,QACA,YACA,aACA,cACA,YACA,YACA,cACA,WACA,UACA,eACA,eACA,SACA,UACA,UACA,UACA,QACA,aACA,QACA,UACA,YACA,WACA,WACA,UACA,WACA,aACA,UACA,OACA,YACA,cACA,QACA,OACA,UACA,cACA,YACA,YACA,UACA,WACA,YACA,YACA,YACA,cACA,SACA,YACA,cACA,SACA,YACA,cACA,aACA,cACA,cACA,YACA,WACA,WACA,QACA,UACA,QACA,OACA,WACA,OACA,aACA,QACA,WACA,SACA,YACA,QACA,YACA,MACA,UACA,YACA,UACA,aACA,OACA,MACA,QACA,WACA,SACA,YACA,WACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,WACA,UACA,UACA,MACA,SACA,SACA,SACA,OACA,UACA,WACA,OACA,QACA,YACA,UACA,OACA,QACA,WACA,QACA,aACA,SACA,OACA,SACA,WACA,aACA,SACA,WACA,SACA,UACA,QACA,QACA,YACA,aACA,QACA,UACA,OACA,YACA,UACA,WACA,YACA,YACA,SACA,SACA,WACA,aACA,YACA,OACA,UACA,WACA,QACA,QACA,UACA,SACA,OACA,WACA,SACA,WACA,QACA,UACA,WACA,aACA,cACA,SACA,SACA,YACA,SACA,QACA,SACA,SACA,SACA,SACA,WACA,cACA,OACA,WACA,WACA,aACA,QACA,QACA,UACA,QACA,SACA,aACA,QACA,QACA,UACA,OACA,SACA,aACA,YACA,UACA,QACA,UACA,UACA,WACA,SACA,UACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,UACA,QACA,WACA,UACA,OACA,aACA,aACA,SACA,WACA,SACA,OACA,QACA,SACA,OACA,eACA,QACA,WACA,WACA,WACA,QACA,YACA,YACA,WACA,WACA,SACA,QACA,OACA,SACA,QACA,SACA,QACA,aACA,OACA,WACA,OACA,QACA,WACA,WACA,SACA,QACA,YACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,SACA,WACA,QACA,QACA,WACA,WACA,QACA,OACA,OACA,WACA,UACA,WACA,WACA,aACA,QACA,UACA,UACA,QACA,iBACA,OACA,eACA,cACA,UACA,WACA,aACA,QACA,QACA,UACA,WACA,QACA,UACA,gBACA,YACA,SACA,WACA,QACA,QACA,UACA,UACA,WACA,WACA,SACA,UACA,OACA,cACA,aACA,eACA,YACA,UACA,aACA,SACA,WACA,SACA,WACA,SACA,SACA,YACA,UACA,UACA,WACA,WACA,aACA,MACA,OACA,UACA,SACA,UACA,cACA,UACA,YACA,WACA,SACA,UACA,OACA,UACA,SACA,QACA,WACA,aACA,OACA,MACA,QACA,QACA,aACA,YACA,UACA,OACA,WACA,WACA,MACA,UACA,YACA,eACA,aACA,cACA,YACA,cACA,aACA,aACA,YACA,UACA,WACA,YACA,cACA,aACA,YACA,gBACA,SACA,WACA,YACA,WACA,aACA,cACA,iBACA,aACA,aACA,SACA,SACA,eACA,eACA,eACA,cACA,aACA,eACA,kBACA,aACA,YACA,WACA,cACA,cACA,gBACA,WACA,YACA,aACA,WACA,WACA,WACA,SACA,WACA,cACA,WACA,YACA,gBACA,YACA,cACA,cACA,gBACA,cACA,SACA,cACA,cACA,WACA,gBACA,WACA,YACA,aACA,QACA,WACA,gBACA,YACA,aACA,QACA,QACA,SACA,aACA,SACA,QACA,UACA,UACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,UACA,QACA,QACA,QACA,SACA,WACA,gBACA,QACA,OACA,MACA,OACA,cACA,SACA,SACA,SACA,SACA,UACA,gBACA,QACA,QACA,SACA,UACA,gBACA,UACA,OACA,OACA,aACA,UACA,QACA,QACA,OACA,UACA,OACA,YACA,SACA,SACA,OACA,UACA,QACA,OACA,UACA,OACA,QACA,aACA,SACA,QACA,OACA,QACA,eACA,UACA,OACA,WACA,SACA,UACA,OACA,UACA,SACA,QACA,SACA,WACA,SACA,OACA,SACA,QACA,SACA,YACA,OACA,SACA,OACA,UACA,YACA,QACA,WACA,OACA,OACA,UACA,UACA,SACA,SACA,MACA,QACA,QACA,QACA,YACA,YACA,WACA,QACA,OACA,WACA,YACA,YACA,QACA,UACA,UACA,QACA,MACA,YACA,UACA,QACA,UACA,UACA,cACA,WACA,QACA,YACA,OACA,YACA,UACA,WACA,OACA,SACA,UACA,YACA,YACA,UACA,WACA,gBACA,SACA,SACA,QACA,OACA,SACA,QACA,UACA,WACA,SACA,OACA,aACA,SACA,UACA,SACA,YACA,WACA,WACA,OACA,QACA,QACA,WACA,SACA,OACA,WACA,QACA,WACA,YACA,QACA,QACA,SACA,YACA,YACA,UACA,YACA,WACA,QACA,QACA,UACA,SACA,SACA,QACA,QACA,YACA,YACA,UACA,aACA,QACA,QACA,YACA,WACA,aACA,cACA,UACA,QACA,UACA,eACA,UACA,UACA,QACA,QACA,QACA,OACA,QACA,aACA,QACA,QACA,SACA,QACA,UACA,UACA,aACA,WACA,OACA,OACA,WACA,YACA,WACA,QACA,WACA,YACA,aACA,cACA,aACA,UACA,UACA,MACA,OACA,OACA,OACA,QACA,SACA,OACA,QACA,YACA,YACA,QACA,aACA,cACA,cACA,UACA,SACA,YACA,OACA,UACA,QACA,aACA,QACA,UACA,OACA,OACA,aACA,WACA,aACA,QACA,SACA,WACA,WACA,QACA,YACA,SACA,YACA,UACA,aACA,YACA,WACA,aACA,UACA,aACA,UACA,MACA,UACA,UACA,YACA,WACA,OACA,MACA,gBACA,aACA,MACA,UACA,OACA,OACA,WACA,UACA,aACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,SACA,WACA,QACA,MACA,WACA,aACA,WACA,aACA,cACA,OACA,gBACA,aACA,UACA,YACA,aACA,YACA,QACA,cACA,UACA,cACA,YACA,OACA,SACA,UACA,YACA,WACA,UACA,eACA,UACA,aACA,OACA,SACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,QACA,cACA,YACA,YACA,WACA,YACA,QACA,cACA,SACA,QACA,QACA,SACA,QACA,WACA,WACA,WACA,OACA,UACA,UACA,SACA,QACA,YACA,QACA,UACA,YACA,UACA,WACA,UACA,WACA,SACA,QACA,QACA,UACA,YACA,SACA,WACA,SACA,YACA,UACA,OACA,UACA,SACA,OACA,WACA,aACA,WACA,UACA,WACA,YACA,YACA,WACA,UACA,UACA,UACA,cACA,SACA,WACA,SACA,UACA,UACA,QACA,WACA,UACA,QACA,WACA,aACA,aACA,UACA,SACA,aACA,QACA,UACA,cACA,YACA,SACA,QACA,SACA,WACA,UACA,OACA,OACA,SACA,UACA,QACA,QACA,SACA,UACA,WACA,QACA,SACA,SACA,YACA,cACA,YACA,SACA,YACA,eACA,QACA,WACA,eACA,QACA,iBACA,SACA,WACA,WACA,YACA,QACA,SACA,UACA,SACA,QACA,eACA,UACA,QACA,OACA,OACA,QACA,QACA,MACA,QACA,OACA,YACA,aACA,QACA,SACA,YACA,WACA,YACA,cACA,MACA,YACA,aACA,aACA,QACA,UACA,WACA,WACA,aACA,cACA,aACA,SACA,YACA,YACA,WACA,WACA,WACA,aACA,cACA,aACA,YACA,YACA,aACA,OACA,QACA,YACA,WACA,QACA,SACA,OACA,QACA,UACA,SACA,WACA,QACA,OACA,WACA,SACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,OACA,UACA,QACA,QACA,gBACA,WACA,QACA,MACA,OACA,QACA,OACA,QACA,OACA,YACA,WACA,QACA,YACA,aACA,SACA,QACA,aACA,QACA,SACA,SACA,QACA,YACA,UACA,YACA,aACA,gBACA,WACA,WACA,UACA,aACA,SACA,YACA,cACA,SACA,YACA,SACA,SACA,YACA,eACA,UACA,eACA,cACA,WACA,SACA,UACA,aACA,UACA,SACA,SACA,UACA,QACA,SACA,QACA,UACA,WACA,YACA,QACA,aACA,QACA,YACA,UACA,WACA,SACA,QACA,aACA,QACA,SACA,OACA,MACA,OACA,SACA,QACA,QACA,SACA,UACA,SACA,aACA,UACA,SACA,SACA,MACA,WACA,WACA,WACA,SACA,SACA,SACA,OACA,QACA,WACA,SACA,OACA,SACA,QACA,SACA,QACA,SACA,UACA,SACA,SACA,OACA,SACA,WACA,SACA,YACA,WACA,SACA,SACA,WACA,OACA,QACA,QACA,SACA,OACA,gBACA,SACA,OACA,YACA,UACA,QACA,OACA,OACA,UACA,YACA,SACA,UACA,WACA,cACA,SACA,YACA,QACA,SACA,QACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,SACA,OACA,WACA,UACA,SACA,UACA,YACA,YACA,WACA,SACA,QACA,UACA,UACA,QACA,WACA,WACA,UACA,QACA,SACA,aACA,YACA,SACA,QACA,QACA,cACA,SACA,QACA,cACA,SACA,SACA,QACA,WACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,WACA,WACA,aACA,SACA,SACA,UACA,UACA,aACA,aACA,cACA,SACA,WACA,aACA,WACA,YACA,SACA,SACA,QACA,QACA,QACA,SACA,cACA,WACA,aACA,UACA,cACA,YACA,aACA,SACA,SACA,SACA,QACA,aACA,QACA,cACA,cACA,aACA,QACA,QACA,QACA,WACA,YACA,OACA,OACA,MACA,WACA,QACA,OACA,WACA,YACA,QACA,WACA,OACA,SACA,UACA,UACA,UACA,QACA,aACA,UACA,YACA,WACA,MACA,SACA,QACA,UACA,QACA,WACA,WACA,SACA,QACA,WACA,OACA,cACA,QACA,QACA,OACA,YACA,QACA,UACA,OACA,SACA,WACA,QACA,aACA,cACA,aACA,cACA,QACA,UACA,aACA,aACA,OACA,QACA,cACA,SACA,SACA,OACA,QACA,WACA,YACA,OACA,SACA,QACA,QACA,WACA,SACA,UACA,WACA,SACA,YACA,YACA,aACA,aACA,SACA,WACA,OACA,QACA,UACA,WACA,YACA,OACA,WACA,cACA,SACA,WACA,QACA,YACA,OACA,MACA,UACA,aACA,UACA,OACA,WACA,QACA,SACA,gBACA,UACA,UACA,aACA,WACA,gBACA,WACA,cACA,YACA,cACA,aACA,cACA,UACA,YACA,SACA,aACA,QACA,WACA,cACA,UACA,YACA,UACA,cACA,eACA,SACA,SACA,UACA,UACA,WACA,UACA,UACA,YACA,aACA,cACA,SACA,SACA,YACA,YACA,WACA,aACA,SACA,SACA,WACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,SACA,SACA,UACA,QACA,UACA,QACA,SACA,OACA,OACA,SACA,UACA,WACA,UACA,QACA,YACA,SACA,UACA,WACA,QACA,OACA,QACA,WACA,QACA,WACA,UACA,OACA,UACA,YACA,WACA,WACA,UACA,aACA,SACA,QACA,UACA,UACA,aACA,WACA,WACA,aACA,UACA,SACA,UACA,WACA,UACA,QACA,YACA,QACA,YACA,WACA,aACA,YACA,SACA,QACA,UACA,UACA,UACA,MACA,YACA,UACA,UACA,OACA,cACA,SACA,OACA,WACA,WACA,cACA,SACA,OACA,OACA,UACA,QACA,SACA,MACA,SACA,QACA,UACA,QACA,UACA,kBACA,eACA,gBACA,WACA,YACA,WACA,aACA,YACA,MACA,QACA,YACA,YACA,YACA,aACA,QACA,QACA,YACA,WACA,SACA,OACA,YACA,SACA,OACA,UACA,SACA,UACA,QACA,SACA,OACA,OACA,UACA,QACA,SACA,YACA,SACA,UACA,YACA,SACA,QACA,QACA,WACA,UACA,OACA,UACA,YACA,QACA,QACA,YACA,aACA,SACA,WACA,WACA,WACA,QACA,MACA,aACA,UACA,SACA,SACA,YACA,WACA,QACA,WACA,QACA,OACA,UACA,QACA,SACA,QACA,UAIF,SAASC,EAAaC,GACrB,OAAOA,KAAWnN,KAAKoN,SAAWD,EAAMjN,SAczC,OAXA,SAA0BmN,QACT,IAAXA,IAAoBA,GAAS,GAElC,IAAIC,EAASJ,EAAWF,GAKxB,OAJGK,IACFC,EAAS,KAAOA,EAAOC,OAAO,EAAE,GAAGC,cAAgBF,EAAOC,OAAO,IAGzDL,EAAWD,GAAe,IAAMK,GA9uEsCG,MCCjF,SAASC,GAAKC,EAAK1N,GAClB,OAAO0N,KAAS3N,KAAKoN,UAAYnN,EAAM0N,IAGxC,SAAShG,GAAK5H,EAAK3B,GAClB,OAAO2J,MAAMhI,GAAK4H,OAAOhB,IAAI,CAACiH,EAAGzN,IAAM/B,EAAG+B,IAW3C,MAAM0N,GAAU,CAEf,kGACA,gGACA,kGACA,kGACA,gGACA,kGACA,kGACA,kGACA,0GAGclG,GAAK,IAAOxH,IACnB,CACNuC,IAAK,IAAIvC,EACTe,KAAM4M,KACNC,QAvBMpG,GADU+F,GAAK,EAAG,IACH,IAEd/F,GADY+F,GAAK,EAAG,IACH,IAAMM,OAAOC,aAAaP,GAAK,GAAG,OAAOQ,KAAK,KACpEA,KAAK,KAqBPC,OAAQN,GAAQH,GAAK,EAAGG,GAAQ3N,qGC5B5BhB,yBACDA,mEAFyCA,kNAAAA,mBACxCA,eACDA,4DAROiP,WACAjN,cACA6M,iPCcI7O,mJL+oChB,SAA2BkP,EAAQC,GAC/B,MAAMxJ,EAAS,GACTyJ,EAAc,GACdC,EAAgB,CAAEpP,QAAS,GACjC,IAAIgB,EAAIiO,EAAOlO,OACf,KAAOC,KAAK,CACR,MAAM0F,EAAIuI,EAAOjO,GACX+J,EAAImE,EAAQlO,GAClB,GAAI+J,EAAG,CACH,IAAK,MAAMxH,KAAOmD,EACRnD,KAAOwH,IACToE,EAAY5L,GAAO,GAE3B,IAAK,MAAMA,KAAOwH,EACTqE,EAAc7L,KACfmC,EAAOnC,GAAOwH,EAAExH,GAChB6L,EAAc7L,GAAO,GAG7B0L,EAAOjO,GAAK+J,OAGZ,IAAK,MAAMxH,KAAOmD,EACd0I,EAAc7L,GAAO,EAIjC,IAAK,MAAMA,KAAO4L,EACR5L,KAAOmC,IACTA,EAAOnC,QAAO7C,GAEtB,OAAOgF,OAEgB2J,EKhrCXtP,KLirCmB,iBAAjBsP,GAA8C,OAAjBA,EAAwBA,EAAe,SADtF,IAA2BA,i1BK9qCRtP,mBAAQA,gVAARA,qBAAQA,mKAZtByM,EACAC,qECNO,kEAAQ,CACnBpL,OAAQW,SAASsN,KACjBrI,MAAO,CACNlF,KAAM"}